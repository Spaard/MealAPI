{"version":3,"file":"meal-page.js","sourceRoot":"","sources":["../src/meal-page.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n/**\r\n * An example element.\r\n *\r\n * @fires count-changed - Indicates when the count changes\r\n * @slot - This element has a slot\r\n * @csspart button - The button\r\n */\r\n@customElement('meal-page')\r\nexport class MealPage extends LitElement {\r\n  static override styles = css`\r\n    \r\n    :host {\r\n      display: block;\r\n      border: solid 1px blue;\r\n      padding: 16px;\r\n      max-width: 70vw;\r\n      margin-left: 10vw;\r\n      margin-top: 16px;\r\n    } \r\n    \r\n    .container{\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 1vh;\r\n    }\r\n\r\n    .infos-container {\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 5px;\r\n    }\r\n\r\n    hr.dotted {\r\n      border-top: 3px dotted #bbb;\r\n      width: 100%; \r\n    }\r\n\r\n    .image {\r\n      height: 50vh;\r\n      width: auto;\r\n      max-width: 100%;\r\n      display: block;\r\n      object-fit: cover;\r\n      margin: 0;\r\n    }\r\n\r\n    .dish-name {\r\n      font-size: 2rem;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .meal-category{\r\n      color: gray;\r\n    }\r\n\r\n    .ingredients{\r\n      color: \"#272727\";\r\n    }\r\n  `;\r\n\r\n  @property({type: String})\r\n  mealId = '';\r\n\r\n  @property({type: String})\r\n  name = 'Nom du plat';\r\n\r\n  @property({type: String})\r\n  category = 'category';\r\n\r\n  @property({type: String})\r\n  imageUrl = '../images/test.jpg';\r\n\r\n  @property({type: Array})\r\n  ingredients: string[] = [];\r\n\r\n  @property({type: String})\r\n  instructions = '';\r\n\r\n  @property({type: String})\r\n  area = '';\r\n\r\n  override async firstUpdated() {\r\n    // Récupération de l'id du plat à partir de l'URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    this.mealId = params.get('mealId') || '';\r\n    console.log(this.mealId);\r\n  \r\n    if (this.mealId) {\r\n      try {\r\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${this.mealId}`);\r\n        if (response.ok) {\r\n          let data = await response.json();\r\n          data = data.meals[0];\r\n          console.log(data);\r\n          \r\n          this.name = data.strMeal;\r\n          this.imageUrl = data.strMealThumb;\r\n          this.category = data.strCategory;\r\n          this.area = data.strArea;\r\n          this.instructions = data.strInstructions;\r\n\r\n          this.ingredients = [];\r\n          for (let i = 1; i <= 20; i++) {\r\n            const ingredient = data[`strIngredient${i}`];\r\n            if (ingredient && ingredient.trim() !== '') {\r\n              this.ingredients.push(ingredient);\r\n            }\r\n          }\r\n\r\n          \r\n        } else {\r\n          console.error('Erreur lors de la récupération du plat:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur réseau :', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  override render() {\r\n    return html`\r\n      <div class=\"container\"> \r\n        <span class=\"dish-name\">${this.name}</span>\r\n        <div class=\"infos-container\">\r\n          <div class=\"dish-tags\">Category : ${this.category}</div>\r\n          <span class=\"meal-category\"></span>\r\n        </div>\r\n        <div class=\"infos-container\">\r\n          <div class=\"dish-tags\">Area : ${this.area}</div>\r\n          <span class=\"meal-category\"></span>\r\n        </div>\r\n        <hr class=\"dotted\">\r\n        <img class=\"image\" src=\"${this.imageUrl}\" alt=\"Image du plat\">\r\n        <span class=\"ingredients\">Ingrédients :</span>\r\n        <ul class=\"ingredients\">\r\n          ${this.ingredients.length > 0 \r\n            ? this.ingredients.map(item => html`<li>${item}</li>`)\r\n            : html`<li>Aucun ingrédient disponible</li>`\r\n          }\r\n        </ul>\r\n        <hr class=\"dotted\">\r\n        <span class=\"preparation\">Préparation :</span>\r\n        <div class=\"preparation\">${this.instructions}</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'meal-page': MealPage;\r\n  }\r\n}\r\n"]}