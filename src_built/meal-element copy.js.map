{"version":3,"file":"meal-element copy.js","sourceRoot":"","sources":["../src/meal-element copy.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D;;;;;;GAMG;AAEI,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;QAoDL,UAAK,GAAG,CAAC,CAAC;IAeZ,CAAC;IAbU,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;KASV,CAAC;IACJ,CAAC;;AAhEe,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgD3B,AAhDqB,CAgDpB;AAGF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0CACf;AApDC,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CAmEvB","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n/**\r\n * An example element.\r\n *\r\n * @fires count-changed - Indicates when the count changes\r\n * @slot - This element has a slot\r\n * @csspart button - The button\r\n */\r\n@customElement('meal-element')\r\nexport class MealElement extends LitElement {\r\n  static override styles = css`\r\n    \r\n    :host {\r\n      display: block;\r\n      border: solid 1px lightgray;\r\n      padding: 16px;\r\n      max-width: 70vw;\r\n      margin-left: 10vw;\r\n      margin-top: 16px;\r\n    } \r\n    \r\n    h1 {\r\n      color:blue;\r\n    }\r\n\r\n    .image-preview {\r\n      box-sizing: border-box;\r\n      width: 15vw;\r\n      max-width:300px;\r\n    }\r\n\r\n    .infos-preview{\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: column;\r\n      //gap: 10%;\r\n    }\r\n\r\n    .container{\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 10px;\r\n    }\r\n\r\n    .dish-name {\r\n      font-size: 1.5rem;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .cook-time {\r\n      color: gray;\r\n    }\r\n\r\n    .main-ingredients{\r\n      color: gray;\r\n      padding-top: 5vw;\r\n    }\r\n  `;\r\n\r\n  @property({type: Number})\r\n  count = 0;\r\n\r\n  override render() {\r\n    return html`\r\n      <div class=\"container\"> \r\n        <img class=\"image-preview\" src=\"../images/test.jpg\">\r\n        <div class=\"infos-preview\">\r\n          <span class=\"dish-name\">Nom du plat</span>\r\n          <span class=\"cook-time\">Temps de cook</span>\r\n          <span class=\"main-ingredients\">Ingr√©dients principaux</span>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'meal-element': MealElement;\r\n  }\r\n}\r\n"]}