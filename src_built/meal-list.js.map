{"version":3,"file":"meal-list.js","sourceRoot":"","sources":["../src/meal-list.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {Task} from '@lit/task';\r\nimport './meal-element';\r\n\r\ntype Dish = {\r\n  idMeal: string;\r\n  name: string;\r\n  category: string;\r\n  instructions: string;\r\n  urlImage: string;\r\n  mainIngredients: string[];\r\n};\r\n\r\n@customElement('meal-list')\r\nexport class MealListElement extends LitElement {\r\n  static override styles = css`\r\n  \r\n  .no-meal {\r\n    display: block;\r\n      border: solid 3px black;\r\n      border-radius : 20px;\r\n      padding: 16px;\r\n      max-width: 70vw;\r\n      margin-left: 10vw;\r\n      margin-top: 16px;\r\n      background-color : #d3e8f8dc;\r\n      transition: transform 0.3s ease;\r\n  }\r\n  \r\n  `;\r\n\r\n  @property({type: String})\r\n   mealSearch = '';\r\n\r\n   _dishDataMining!: Task<[string], Dish[]>; \r\n\r\n   override async firstUpdated() {\r\n     const params = new URLSearchParams(window.location.search);\r\n     this.mealSearch = params.get('mealSearch') || '';\r\n     console.log(this.mealSearch);\r\n   \r\n    \r\n     this._dishDataMining = new Task(this, {\r\n       args: () => [this.mealSearch], \r\n       task: async ([searchTerm]) => {\r\n         console.log(`Fetching meals for: ${searchTerm}`);\r\n         const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchTerm}`);\r\n         if (!response.ok) {\r\n           throw new Error('Server response error');\r\n         }\r\n         const data = await response.json();\r\n         return data.meals ? data.meals.map((meal: any): Dish => ({\r\n          idMeal: meal.idMeal,\r\n          name: meal.strMeal,\r\n          category: meal.strCategory,\r\n          instructions: meal.strInstructions,\r\n          urlImage: meal.strMealThumb,\r\n          mainIngredients: [meal.strIngredient1, meal.strIngredient2, meal.strIngredient3],\r\n        })) : [];\r\n      },\r\n    });\r\n\r\n     this.requestUpdate();\r\n   };\r\n\r\n\r\n   override render() {\r\n    return html`\r\n      ${this._dishDataMining\r\n        ? this._dishDataMining.render({\r\n            initial: () => html`<p>Waiting to start task...</p>`,\r\n            pending: () => html`<p>Loading meals...</p>`,\r\n            complete: (dishes: Dish[]) =>\r\n              dishes.length > 0\r\n                ? html`${dishes.map(\r\n                    (dish: Dish) => html`\r\n                      <meal-element\r\n                        idMeal=${dish.idMeal}\r\n                        name=${dish.name}\r\n                        category=${dish.category}\r\n                        instructions=${dish.instructions}\r\n                        urlImage=${dish.urlImage}\r\n                        .mainIngredients=${dish.mainIngredients}\r\n                      ></meal-element>\r\n                    `\r\n                  )}`\r\n                : html`\r\n                <div class=\"no-meal\">\r\n                  <p style=\"color: #300d11; font-weight: bold;\">Aucun plat trouv√©.</p>\r\n                </div>\r\n                \r\n                `,\r\n          })\r\n        : html`<p>Loading...</p>`}\r\n    `;\r\n  }\r\n  \r\n  \r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'meal-list': MealListElement;\r\n  }\r\n}\r\n"]}