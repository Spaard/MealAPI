{"version":3,"file":"dropdown-filter copy.js","sourceRoot":"","sources":["../src/dropdown-filter copy.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAGnD,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAAvC;;QAGL,WAAM,GAAG,KAAK,CAAC,CAAC,8BAA8B;IAwFhD,CAAC;IAnBU,MAAM;QACb,OAAO,IAAI,CAAA;wBACS,IAAI,CAAC,UAAU;;4BAEX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,IAAI,CAAC,UAAU;;4BAErD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;0CACX,IAAI,CAAC,UAAU;;;;;;KAMpD,CAAC;IACJ,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;;AArFe,qBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgE3B,AAhEqB,CAgEpB;AAlEF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;8CACX;AAHJ,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CA2F1B","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('dropdown-filter')\r\nexport class DropdownFilter extends LitElement {\r\n\r\n  @property({type: Boolean})\r\n  isOpen = false; // Gère l'état du menu latéral\r\n\r\n  static override styles = css`\r\n\r\n    .menu-button {\r\n      background: none;\r\n      border: none;\r\n      font-size: 24px;\r\n      cursor: pointer;\r\n      padding: 10px;\r\n    }\r\n\r\n\r\n    .sidebar {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0; \r\n      height: 100%;\r\n      background-color: #333;\r\n      overflow-x: hidden;\r\n      transition: width 0.3s;\r\n      padding-top: 60px;\r\n    }\r\n\r\n\r\n    .sidebar.open {\r\n      width: 250px; \r\n    }\r\n\r\n    .sidebar a {\r\n      display: block;\r\n      color: white;\r\n      padding: 15px;\r\n      text-decoration: none;\r\n      font-size: 18px;\r\n      transition: 0.3s;\r\n    }\r\n\r\n    .sidebar a:hover {\r\n      background-color: #575757;\r\n    }\r\n\r\n    .close-btn {\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 15px;\r\n      font-size: 30px;\r\n      color: white;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .overlay {\r\n      display: none;\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      z-index: 2;\r\n    }\r\n\r\n    .overlay.show {\r\n      display: block;\r\n    }\r\n  `;\r\n\r\n\r\n  override render() {\r\n    return html`\r\n      <button @click=\"${this.toggleMenu}\" class=\"menu-button\">☰</button>\r\n\r\n      <div class=\"overlay ${this.isOpen ? 'show' : ''}\" @click=\"${this.toggleMenu}\"></div>\r\n\r\n      <div class=\"sidebar ${this.isOpen ? 'open' : ''}\">\r\n        <span class=\"close-btn\" @click=\"${this.toggleMenu}\">&times;</span>\r\n        <a href=\"#\">Accueil</a>\r\n        <a href=\"#\">Recettes</a>\r\n        <a href=\"#\">Favoris</a>\r\n        <a href=\"#\">À propos</a>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private toggleMenu() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'dropdown-filter': DropdownFilter;\r\n  }\r\n}\r\n"]}