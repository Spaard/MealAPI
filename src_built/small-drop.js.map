{"version":3,"file":"small-drop.js","sourceRoot":"","sources":["../src/small-drop.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('small-drop')\r\nexport class smallDrop extends LitElement {\r\n\r\n  @property({type: Boolean})\r\n  isOpen = false;\r\n\r\n  static override styles = css`\r\n  :host {\r\n    display: block;\r\n    width: 89%; \r\n  }\r\n\r\n  .dropdown {\r\n    width: 100%; \r\n    position: relative;\r\n    display: block;\r\n  }\r\n\r\n  .dropbtn {\r\n    cursor: pointer;\r\n    width: 100%; \r\n    padding: 15px;\r\n    font-size: 20px;\r\n    transition: 0.3s;\r\n    text-align: left; \r\n  }\r\n\r\n  .dropbtn:hover, .dropbtn:focus {\r\n    background-color: #575757;\r\n    color: white;\r\n  }\r\n\r\n  .dropdown-content {\r\n    display: none;\r\n    position: relative;\r\n    width: 100%;\r\n    z-index: 1;\r\n    padding-left:15px;\r\n  }\r\n\r\n  .dropdown-content.show {\r\n    display: block;\r\n  }\r\n\r\n  .dropdown-content a {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    font-size: 16px;\r\n    text-decoration: none;\r\n    display: block;\r\n  }\r\n\r\n  .dropdown-content a:hover {\r\n    background-color: #575757;\r\n    color: white;\r\n  }\r\n`;\r\n\r\n\r\n@property({type: String})\r\nfilterName = 'Filter';\r\n\r\n@property({type: String})\r\nfilterLetter = '';\r\n\r\n@property({type: Array})\r\nfilterOptions: string[] = [];\r\n\r\n@property({type: String})\r\nkey = '';\r\n\r\noverride async firstUpdated() {\r\n\r\n  if (this.filterName === 'Category') {\r\n    this.filterLetter = 'c';\r\n    this.key = 'strCategory';\r\n  } else if (this.filterName === 'Main Ingredient') {\r\n    this.filterLetter = 'i';\r\n    this.key = 'strIngredient';\r\n  } else if (this.filterName === 'Area') {\r\n    this.filterLetter = 'a';\r\n    this.key = 'strArea';\r\n  } \r\n\r\n  try {\r\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/list.php?${this.filterLetter}=list`);\r\n      if (response.ok) {\r\n        let data = await response.json();\r\n        data = data.meals;        \r\n\r\n        this.filterOptions = [];\r\n        \r\n        for (let i = 0; i < data.length; i++) {\r\n          const option = data[i][this.key];\r\n          this.filterOptions.push(option);\r\n        }\r\n\r\n        \r\n      } else {\r\n        console.error('Erreur lors de la récupération du plat:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur réseau :', error);\r\n    }\r\n  }\r\n\r\n\r\n  override render() {\r\n    return html`\r\n      <div class=\"dropdown\">\r\n        <div @click=\"${this.toggleDropdown}\" class=\"dropbtn\">${this.filterName}</div>\r\n        <div class=\"dropdown-content ${this.isOpen ? 'show' : ''}\">\r\n        ${this.filterOptions.length > 0 \r\n            ? this.filterOptions.map((item) => html`<a href=#>${item}</a>`)\r\n            : html`<a href=#>No ingredient available</a>`\r\n          }\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private toggleDropdown() {\r\n    this.isOpen = !this.isOpen; \r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'small-drop': smallDrop;\r\n  }\r\n}\r\n"]}