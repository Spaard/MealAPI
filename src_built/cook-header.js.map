{"version":3,"file":"cook-header.js","sourceRoot":"","sources":["../src/cook-header.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAGzC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAqClC,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;iCAOkB,IAAI,CAAC,QAAQ;;;;KAIzC,CAAC;IACJ,CAAC;IAEO,QAAQ;QACd,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;;AArDe,oBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkC3B,AAlCqB,CAkCpB;AAnCS,aAAa;IADzB,aAAa,CAAC,aAAa,CAAC;GAChB,aAAa,CAwDzB","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\n\r\n@customElement('cook-header')\r\nexport class HeaderElement extends LitElement {\r\n  static override styles = css`\r\n    div {\r\n        display : flex;\r\n        flex-direction : row;\r\n        justify-content : space-between;\r\n        align-items : center;\r\n        margin : 0;\r\n    }\r\n    img {\r\n        width: 5vw;\r\n        aspect-ratio : 1 / 1;\r\n    }\r\n    h1 {\r\n        font-size : 4vw;\r\n        margin : 0;\r\n    }\r\n    button {\r\n        background-image : url(\"../images/magnifier.png\");\r\n        background-size: contain;\r\n        cursor : pointer;\r\n        width: 3vw;\r\n        aspect-ratio : 1 / 1;\r\n        padding : 1vh;\r\n    }\r\n    input {\r\n        width: 30vw;\r\n        height: 5vh;\r\n        font-size: 2vw;\r\n        margin : 1vw;\r\n    }\r\n    input::placeholder {\r\n        color : red;\r\n        opacity : 0.7;\r\n    }\r\n  `;\r\n\r\n  override render() {\r\n    return html`\r\n        <div style=\"border : thick double black\">\r\n            <div>\r\n                <img src=\"../images/logo.png\">\r\n                <h1><span style=\"color:red\">Let</span><span style=\"color:green\">Me</span><span style=\"color:red\">Cook</span>!</h1>\r\n            </div>\r\n            <div>\r\n                <button @click=${this._onClick} part=\"button\"></button>\r\n                <input type=\"text\" placeholder=\"Search a dish :\">\r\n            </div>\r\n        </div>\r\n    `;\r\n  }\r\n\r\n  private _onClick() {\r\n    console.log(\"Clicked\");\r\n  }\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'cook-header': HeaderElement;\r\n  }\r\n}\r\n"]}